// Generated by CoffeeScript 1.3.3
(function() {
  var ejs, eol, fs, log, log_verbose, os, path, pkg, program, settings_template, start_project, version, winston,
    _this = this;

  path = require('path');

  fs = require('fs');

  ejs = require('ejs');

  program = require('commander');

  pkg = require('../package.json');

  os = require('os');

  winston = require('winston');

  version = pkg.version;

  eol = 'win32' === os.platform() ? '\r\n' : '\n';

  log = new winston.Logger({
    transports: [
      new winston.transports.Console({
        level: 'error'
      })
    ]
  });

  log_verbose = function(option) {
    if (option === true) {
      return log.transports.console.level = 'info';
    }
  };

  settings_template = ["module.exports = ", " name : '<%= project_name %>'"].join(eol);

  start_project = function(project_name, options) {
    var project_path;
    log_verbose(options.verbose);
    log.info('Starting new project [' + project_name + '].');
    project_path = path.join('.', project_name);
    return path.exists(project_path, function(exists) {
      if (exists) {
        throw '[' + project_name + '] already exists';
      }
      fs.mkdirSync(project_path);
      fs.mkdirSync(path.join(project_path, 'src'));
      return fs.writeFileSync(path.join(project_path, 'src', 'settings.coffee'), ejs.render(settings_template, {
        project_name: project_name
      }));
    });
  };

  program.usage('[options] <settings>').version(version);

  program.command('startproject <project_name>').description(' starts a new noxious project').option('-v, --verbose', 'Switch verbose status reporing on').action(start_project);

  program.parse(process.argv);

}).call(this);
