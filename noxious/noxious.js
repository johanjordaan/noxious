// Generated by CoffeeScript 1.3.3
(function() {
  var add_template, construct_class, fs, load_template_dir, load_template_file, path, templates,
    _this = this;

  fs = require('fs');

  path = require('path');

  templates = [];

  construct_class = function(name, template) {
    module.exports[name] = function() {
      var _this = this;
      this.save = function() {
        return console.log('Saving ...');
      };
      return void 0;
    };
    return module.exports[name + 's'] = {
      load: function() {
        return console.log('Loading ...');
      }
    };
  };

  module.exports.construct_class = construct_class;

  add_template = function(template) {
    return templates[template.__name] = template;
  };

  load_template_file = function(file) {
    var template, tmp, _i, _len, _ref, _results;
    tmp = require('./' + file);
    _ref = Object.keys(tmp);
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      template = _ref[_i];
      _results.push(add_template(template));
    }
    return _results;
  };

  load_template_dir = function(dir) {
    var file, files, _i, _len, _results;
    files = fs.readdirSync(dir);
    _results = [];
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      _results.push(load_template_file(file));
    }
    return _results;
  };

  module.exports.init = function(settings) {
    var dir, key, _i, _j, _len, _len1, _ref, _ref1, _results;
    _ref = settings.template_dirs;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      dir = _ref[_i];
      load_template_dir(dir);
    }
    _ref1 = Object.keys(templates);
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      key = _ref1[_j];
      _results.push(construct_class(key, templates[key]));
    }
    return _results;
  };

}).call(this);
